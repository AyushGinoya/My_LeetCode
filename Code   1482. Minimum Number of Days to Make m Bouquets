class Solution {
public:
bool makeMBouquets(vector<int>& bloomDay,int m,int mid,int k){
    int bouquets=0;
    int ct=0;

    //O(n)
    for(int i=0;i<bloomDay.size();i++){
        if(bloomDay[i]<=mid){
            ct++;
        }else{
            ct=0;
        }

        if(ct==k){
            bouquets++;
            ct=0;
        }
    }

    return bouquets>=m;
}
    int minDays(vector<int>& bloomDay, int m, int k) {
        int s=0;
        int e=*max_element(bloomDay.begin(),bloomDay.end());//O(n)
        int ans=-1;

        //O(log(e)*n)
        while(s<=e){
            int mid = s+(e-s)/2;

            if(makeMBouquets(bloomDay,m,mid,k)){//O(n)
                ans=mid;
                e=mid-1;
            }else{
                s=mid+1;
            }
        }

        return ans;
    }
};
