class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        vector<int> ans;
        
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    ans.push_back(i);
                    ans.push_back(j);
                }
            }
        }

        return ans;
    }
};


///O(n^2)


class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        vector<int> ans;
        unordered_map<int,int> m;

        for(int i=0;i<nums.size();i++)
        {
            int second_num=target-nums[i];
            if(m.find(second_num)!=m.end())
            {
                ans.push_back(i);
                ans.push_back(m[second_num]);
            }
           m[nums[i]]=i;
        }
        
        return ans;
    }
};


//O(n)
