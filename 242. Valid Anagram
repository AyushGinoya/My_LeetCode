class Solution {
public:
    bool isAnagram(string s, string t) {
        map<char,int>m1,m2;

        for(int i=0;i<s.length();i++)
        {
            m1[s[i]]++;
        }

        for(int i=0;i<t.length();i++)
        {
            m2[t[i]]++;
        }

        if(m1==m2)
        {
            return true;
        }

        return false;

    }
};







class Solution {
public:
    bool isAnagram(string s, string t) {
        if (s.length() != t.length()) {
            return false;
        }
        
        unordered_map<char, int> freq;
        
        for (int i = 0; i < s.length(); i++) {
            freq[s[i]]++;
            freq[t[i]]--;
        }
        
        for (auto p : freq) {
            if (p.second != 0) {
                return false;
            }
        }
        
        return true;
    }
};











class Solution {
public:
    bool isAnagram(string s, string t) { 
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        return s == t; 
    }
};
