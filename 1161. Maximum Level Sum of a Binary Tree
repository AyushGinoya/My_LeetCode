class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        
        if (root == nullptr) {
            return 0;
        }
        
        int maxSum = INT_MIN; // Initialize the maximum sum with the smallest possible value
        int maxLevel = 1; // Initialize the level with the maximum sum
        int currentLevel = 1; // Initialize the current level
        
        queue<TreeNode*> q;
        q.push(root);
        
        while (!q.empty()) {
            int size = q.size();
            int levelSum = 0;
            
            for (int i = 0; i < size; i++) {
                TreeNode* node = q.front();
                q.pop();
                
                levelSum += node->val;
                
                if (node->left) {
                    q.push(node->left);
                }
                
                if (node->right) {
                    q.push(node->right);
                }
            }
            
            if (levelSum > maxSum) {
                maxSum = levelSum;
                maxLevel = currentLevel;
            }
            
            currentLevel++;
        }
        
        return maxLevel;
    }
};
