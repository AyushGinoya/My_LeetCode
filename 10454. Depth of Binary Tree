/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {

        //method - 1 BFS

        // int n=0;
        // if(root == NULL)
        // return 0;

        // queue<TreeNode*> q;
        // q.push(root);

        // while(!q.empty())
        // {
        //     n++;
        //     int s = q.size();
        //     for(int i=0;i<s;i++)
        //     {
        //         TreeNode* nn = q.front();
        //         q.pop();
        //         if(nn->left != NULL)
        //         q.push(nn->left);
        //         if(nn->right != NULL)
        //         q.push(nn->right);
        //     }
        // }

        //method - 2 DFS
        
        if(root == NULL)
        return 0;

        return max(maxDepth(root->left)+1 , maxDepth(root->right)+1);

    }
};
