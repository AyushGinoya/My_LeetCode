class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        vector<int> v;

        for(int i=0;i<matrix.size();i++)
        {   
            for(int j=0;j<matrix[i].size();j++)
            {
                v.push_back(matrix[i][j]);
            }
        }

        auto iter = find(v.begin(), v.end(), target);
        if(iter != v.end())
        return true;

        return false;
    }
};


//O(n^2)


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int i = 0, j = n - 1;

        while (i < m && j >= 0) {
            if (matrix[i][j] == target)
                return true;
            else if (matrix[i][j] > target)
                j--;
            else
                i++;
        }

        return false;
    }
};


//O(r+c)
